name: run-tests

on: [push]

jobs:
    test:
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 1
            matrix:
                php: ['7.3', '7.4', '8.0']
                laravel: ['6.*', '7.*', '8.*']
                dependency-version: [prefer-stable]
                os: [ubuntu-latest]
                exclude:
                    - laravel: 8.*
                      php: '7.3'
                    - laravel: 6.*
                      php: '8.0'
                include:
                    - laravel: 6.*
                      testbench: 4.*
                      php: '7.3'
                      dependency-version: 'prefer-stable'
                    - laravel: 7.*
                      testbench: 5.*
                      php: '7.3'
                      dependency-version: 'prefer-stable'
                    - laravel: 7.*
                      testbench: 5.*
                      php: '7.4'
                      dependency-version: 'prefer-stable'
                    - laravel: 8.*
                      testbench: 6.*
                      php: '7.4'

        name: "Php: ${{ matrix.php }} - Laravel: ${{ matrix.laravel }} - ${{ matrix.dependency-version }}"

        steps:
            - name: Checkout code
              uses: actions/checkout@v1

            - name: Cache dependencies
              uses: actions/cache@v1
              with:
                  path: ~/.composer/cache/files
                  key: dependencies-laravel-${{ matrix.laravel }}-php-${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: ${{ matrix.php }}
                  extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, mysql, mysqli, pdo_mysql, bcmath, soap, intl, gd, exif, iconv, imagick
                  coverage: none

            - name: Create database
              run: |
                  sudo systemctl start mysql
                  mysql  -u root -proot -e 'CREATE DATABASE IF NOT EXISTS laravel_event_sourcing;'
                  mysql  -u root -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';"

            - name: Install dependencies
              run: |
                  composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --dev --no-interaction --no-update
                  composer update --${{ matrix.dependency-version }} --prefer-dist --no-interaction --no-suggest

            - name: Execute tests
              run: vendor/bin/phpunit
              env:
                  DB_PASSWORD: root
